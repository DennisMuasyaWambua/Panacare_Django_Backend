# Generated by Django 5.2 on 2025-06-19 18:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('doctors', '0005_doctor_accepts_referrals_doctor_consultation_modes_and_more'),
        ('healthcare', '0007_consultation_doctor_token_consultation_patient_token_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('general', 'General Health'), ('nutrition', 'Nutrition'), ('fitness', 'Fitness'), ('mental', 'Mental Health'), ('children', "Children's Health"), ('chronic', 'Chronic Conditions'), ('prevention', 'Preventive Care'), ('research', 'Medical Research'), ('other', 'Other')], max_length=50)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=255)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='articles/images/%Y/%m/')),
                ('visibility', models.CharField(choices=[('public', 'Public - Available to all users'), ('subscribers', 'Subscribers Only - Available to paying patients'), ('private', 'Private - Only visible to author and admins')], default='public', help_text='Controls who can view this article', max_length=20)),
                ('is_approved', models.BooleanField(default=False)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False, help_text='Featured articles appear prominently on the home page')),
                ('related_conditions', models.CharField(blank=True, help_text='Comma-separated health conditions this article relates to', max_length=255)),
                ('reading_time', models.PositiveSmallIntegerField(default=5, help_text='Estimated reading time in minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_articles', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='doctors.doctor')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('is_doctor', models.BooleanField(default=False, help_text='Whether the commenter is a doctor')),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='healthcare.article')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='healthcare.articlecomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article Comment',
                'verbose_name_plural': 'Article Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationChat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('is_doctor', models.BooleanField(default=False, help_text='Whether the sender is a doctor')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='healthcare.consultation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_chat_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation Chat Message',
                'verbose_name_plural': 'Consultation Chat Messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleCommentLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='healthcare.articlecomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment Like',
                'verbose_name_plural': 'Comment Likes',
                'unique_together': {('comment', 'user')},
            },
        ),
    ]
